{"version":3,"sources":["../../../node_modules/browser-pack/_prelude.js","site.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","console","log","$","fn","unveil","threshold","callback","inview","images","filter","$e","this","is","wt","$w","scrollTop","wb","height","et","offset","top","eb","th","loaded","trigger","not","window","retina","devicePixelRatio","attrib","one","source","getAttribute","setAttribute","on","jQuery","Zepto","document","ready","load","style","opacity"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GAAA,YCEAK,SAAQC,IAAK,YAYZ,SAAUC,GAETA,EAAEC,GAAGC,OAAS,SAASC,EAAWC,GAkBhC,QAASF,KAAT,GAAAG,GAAAC,EAAkBC,OAAA,WAChB,GAAIC,GAAAR,EAASS,KACX,KAAID,EAAAE,GAAK,WAAT,CAGA,GAAIC,GAAKC,EAAGC,YAARC,EAAKH,EAAGC,EAAAG,SACRC,EAAKR,EAAAS,SAAQC,IACbC,EAAKH,EAAGR,EAAAO,QAGZ,OAAOI,IAAMR,EAAKS,GAAMJ,GAAMF,EAAKM,IAGrCC,GAAShB,EAAOiB,QAAQ,UAAxBhB,EAASA,EAAOiB,IAAAF,GA7BlB,GAIIA,GAJAT,EAAKZ,EAAEwB,QAAPJ,EAAKjB,GAAT,EACIsB,EAAKD,OAAAE,iBADT,EAEIC,EAASF,EAAO,kBAFpB,WAGInB,EAASG,IAkCb,OA9BAA,MAAKmB,IAAI,SAAU,WAAnB,GAAKC,GAAIpB,KAAUqB,aAAWH,EAC5BE,GAAIA,GAAcpB,KAAAqB,aAAL,YACbD,IACApB,KAAIsB,aAAQ,MAAAF,GACV,kBAAKzB,IAALA,EAAAV,KAAAe,SAsBJG,EAAGoB,GAAG,4CAA6C9B,GAEnDA,IAEOO,OAIRe,OAAOS,QAAUT,OAAOU,OAGzBlC,EAAAmC,UAAEC,MAAA,WACApC,EAAA,iCAAwBE,OAAA,IAAA,WACtBF,EAAAS,MAAK4B,KAAM,WADb5B,KAAA6B,MAAAC,QAAA","file":"site.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconsole.log( 'Hey you!' );\n\n/**\n * jQuery Unveil\n * A very lightweight jQuery plugin to lazy load images\n * http://luis-almeida.github.com/unveil\n *\n * Licensed under the MIT license.\n * Copyright 2013 LuÃ­s Almeida\n * https://github.com/luis-almeida\n */\n\n;(function($) {\n\n  $.fn.unveil = function(threshold, callback) {\n\n    var $w = $(window),\n        th = threshold || 0,\n        retina = window.devicePixelRatio > 1,\n        attrib = retina? \"data-src-retina\" : \"data-src\",\n        images = this,\n        loaded;\n\n    this.one(\"unveil\", function() {\n      var source = this.getAttribute(attrib);\n      source = source || this.getAttribute(\"data-src\");\n      if (source) {\n        this.setAttribute(\"src\", source);\n        if (typeof callback === \"function\") callback.call(this);\n      }\n    });\n\n    function unveil() {\n      var inview = images.filter(function() {\n        var $e = $(this);\n        if ($e.is(\":hidden\")) return;\n\n        var wt = $w.scrollTop(),\n            wb = wt + $w.height(),\n            et = $e.offset().top,\n            eb = et + $e.height();\n\n        return eb >= wt - th && et <= wb + th;\n      });\n\n      loaded = inview.trigger(\"unveil\");\n      images = images.not(loaded);\n    }\n\n    $w.on(\"scroll.unveil resize.unveil lookup.unveil\", unveil);\n\n    unveil();\n\n    return this;\n\n  };\n\n})(window.jQuery || window.Zepto);\n\n$(document).ready(function() {\n  $(\".list-item-article figure img\").unveil(200, function() {\n    $(this).load(function() {\n      this.style.opacity = 1;\n    });\n  });\n});"]}